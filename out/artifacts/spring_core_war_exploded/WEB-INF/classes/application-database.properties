#suppress inspection "SpringBootApplicationProperties" for whole file
#数据库访问配置
#主数据源，默认的
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#上线配置
#spring.datasource.url=jdbc:mysql://192.168.137.139:3306/car?characterEncoding=UTF-8&allowMultiQueries=true&useUnicode=true&serverTimezone=GMT&autoReconnect=true&useSSL=false&failOverReadOnly=false&useServerPrepStmts=true
#spring.datasource.username=
#spring.datasource.password=
#服务器测试
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/car?characterEncoding=UTF-8&allowMultiQueries=true&useUnicode=true&serverTimezone=GMT&autoReconnect=true&useSSL=false&failOverReadOnly=false&useServerPrepStmts=true
spring.datasource.username=root
spring.datasource.password=123456
#<=jdk1.8
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
#下面为连接池的补充设置，应用到上面所有数据源中
#初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=3
spring.datasource.maxActive=100
#配置获取连接等待超时的时间（ms）
spring.datasource.maxWait=300000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
#配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
#spring.datasource.validationQuery=select 1 FROM DUAL
spring.datasource.validationQuery=select 1
#申请连接的时候检测，保证安全性
spring.datasource.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效（sqlserver必须设置为false）
spring.datasource.testOnBorrow=true
#归还连接时执行validationQuery检测连接是否有效（sqlserver必须设置为false）
spring.datasource.testOnReturn=true
#打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=100
#配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,slf4j
#通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;config.decrypt=true
#合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true
#打开removeAbandoned功能
spring.datasource.removeAbandoned=true
#1800秒（30分钟）移除无用的连接
spring.datasource.removeAbandonedTimeout=1800
#关闭abanded连接时输出错误日志
spring.datasource.logAbandoned=true